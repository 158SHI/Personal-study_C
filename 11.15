#define _CRT_SECURE_NO_WARNINGS 1

//整型提升和算数转换

#include<stdio.h>
//int main()
//{
//	char a = 3;
//	//00000000000000000000000000000011
//	//a:00000011
//	char b = 127;
//	//00000000000000000000000001111111
//	//b:01111111
//	char c = a + b;
//	//00000000000000000000000000000011
//	//00000000000000000000000001111111
//	//00000000000000000000000010000010
//	//c:10000010
//	printf("%d\n", c);
//	//11111111111111111111111110000010-补码
//	//11111111111111111111111110000001
//	//打印：10000000000000000000000001111110-原码
//	//-126
//	return 0;
//}

/*
输入NxM矩阵，矩阵元素均为整数，计算其中大于零的元素之和。

输入描述：
第一行为N M(N: 矩阵行数；M: 矩阵列数,且M,N<=10)，接下来的N行为矩阵各行。
输出描述：
一行，其中大于零的元素之和。
*/

//int main()
//{
//	int sum = 0;
//	int tmp = 0;
//	int n, m;
//	scanf("%d %d", &n, &m);
//	for (int i = 0; i < n; i++)
//	{
//		for (int i = 0; i < m; i++)
//		{
//			scanf("%d", &tmp);
//			if (tmp>0)
//			{
//				sum += tmp;
//			}
//		}
//	}
//	printf("%d\n", sum);
//	return 0;
//}

/*
描述
KiKi有一个矩阵，他想知道转置后的矩阵（将矩阵的行列互换得到的新矩阵称为转置矩阵），请编程帮他解答。

输入描述：
第一行包含两个整数n和m，表示一个矩阵包含n行m列，用空格分隔。 (1≤n≤10,1≤m≤10)

从2到n+1行，每行输入m个整数（范围-231~231-1），用空格分隔，共输入n*m个数，表示第一个矩阵中的元素。

输出描述：
输出m行n列，为矩阵转置后的结果。每个数后面有一个空格。
*/

int main()
{
	int arr[10][10] = { 0 };
	int n, m;
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			scanf("%d", &arr[i][j]);
		}
	}
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < n; j++)
		{
			printf("%d ", arr[j][i]);
		}
		printf("\n");
	}
	return 0;
}
