//青蛙跳台阶
#include<stdio.h>

int Jump(int n)
{
	if (n == 0 || n == 1)
	{
		return n;
	}
	else
	{
		return Jump(n - 1) + Jump(n - 2);
	}
}

int main()
{
	int n;
	while (scanf("%d",&n) != EOF)
	{
		int ret = Jump(n);
		printf("%d\n", ret);
	}
	return 0;
}



/*

~~暴力青蛙跳台阶
一直青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。
求该青蛙跳上一个n级的台阶有多少种跳法。

*/

/*
解题思路：
 每个台阶可以看作一块木板，让青蛙跳上去，n个台阶就有n块木板，最后一块木板是青蛙到达的位子， 必须存在，
 其他 (n-1) 块木板可以任意选择是否存在，则每个木板有存在和不存在两种选择，(n-1) 块木板 就有 [2^(n-1)] 种跳法，可以直接得到结果。

其实我们所要求的序列为：0,1,2,4,8,16,……
*/

#include<stdio.h>

int Jump(int n)
{
	if (n==0 || n==1)
	{
		return n;
	}
	else
	{
		int num = 1;
		for (int i = 1; i < n; i++)
		{
			num = num * 2;
		}
		return num;
	}
}

int main()
{
	int n;
	while (scanf("%d",&n) != EOF)
	{
		int ret = Jump(n);
		printf("%d\n", ret);
	}
	return 0;
}
