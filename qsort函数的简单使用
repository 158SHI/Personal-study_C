#include<stdlib.h>
//#include<search.h>

int cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
	//返回值：
	//e1>e2,返回值大于0
	//e1==e2,返回值等于0
	//e1<e2，返回值小于0
}

int cmp_float(const void* e1, const void* e2)
{
	return ((int)(*(int*)e1 - *(int*)e2));
}

int main()
{
	//整型元素的排序
	int arr1[] = { 1,3,5,7,9,2,4,6 };
	int sz = sizeof(arr1) / sizeof(arr1[0]);
	qsort(arr1, sz, sizeof(arr1[0]),cmp_int);
	for (int i = 0; i < sz; i++)
	{
		printf("%d ", arr1[i]);
	}

	printf("\n");

	//浮点型元素的排序
	float arr2[] = { 8.5,3.4,2.1,1.6,6.7,5.3 };
	int sz2 = sizeof(arr2) / sizeof(arr2[0]);
	qsort(arr2, sz2, sizeof(arr2[0]), cmp_float);
	for (int i = 0; i < sz2; i++)
	{
		printf("%.2f ", arr2[i]);
	}

	
	return 0;
}
