/*

>>筛选法求素数<<

描述
用筛选法求n以内的素数。筛选法求解过程为：将2~n之间的正整数放在数组内存储，将数组中2之后的所有能被2整除的数清0，再将3之后的所有能被3整除的数清0 ，以此类推，直到n为止。数组中不为0 的数即为素数。
输入描述：
多组输入，每行输入一个正整数（不大于100）。
输出描述：
针对每行输入的整数n，输出两行，第一行，输出n之内（包括n）的素数，用空格分隔，

第二行，输出数组中2之后被清0 的个数。每行输出后换行。
示例1
输入：
20

输出：
2 3 5 7 11 13 17 19
11

*/


int main()
{
    int n;

    while (scanf("%d", &n) != EOF)
    {
        int count = 0;//计数器
        int arr[100] = { 0 };

        for (int i = 2; i < n; i++) //将2到n的数字存入数组arr中
        {
            arr[i - 2] = i;
        }

        for (int i = 0; i < n; i++) //进行数据操作
        {
            int key;
            if (arr[i] == 0) //选定基数且保证基数不为0
            {
                continue;
            }
            else
            {
                key = arr[i];
            }

            //向后清除
            for (int j = i + 1; j < n; j++)
            {
                int key2;
                if (arr[j] == 0)//使key2不等于0:避免重复的判断 0%key
                {
                    continue;
                }
                else
                {
                    key2 = arr[j];
                }

                if (key2 % key == 0)//能被基数整除，注意基数不能为0
                { 
                    arr[j] = 0; //将其赋值为0
                    count++;
                }
            }
        }
        //按条件输出
        for (int i = 0; i < n; i++)
        {
            if (arr[i] != 0)
            {
                printf("%d ", arr[i]);
            }
        }
        printf("\n%d\n", count + 1);
    }
   return 0;
}
